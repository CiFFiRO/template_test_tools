{"title":"JavaScript исключения","type":1,"rules":{"try":["setTimeout(function() {\n      undefinedVariable; \n    }, 1000);","undefinedVariable;","throw new Error('Something');"],"throw":["throw e;",""],"arg":["(e)",""]},"testText":"function f() {\n  try {\n    ${try}\n  } catch (e) {\n\t\tconsole.log('catched f');\n    ${throw}\n  }\n}\n\ntry {\n  f();\n} catch ${arg} {\n  console.log('catched outer');\n}\n\nПосле выполнения скрипта будет выведено...\n","feedbackScript":"let options = ['catched f\\ncatched outer', 'catched f', 'catched outer',\n             'Скрипт упадет не обработав ошибку', 'Скрипт содержит синтаксические ошибки'];\nlet idx = 0;\n\nif ($try === 0) {\n  idx = 3;\n} else if ($throw === 0) {\n  idx = 0;\n} else {\n  idx = 1;\n}\n\n$$AnswerIs(options[idx]);\noptions.splice(idx, 1);\n$$FalseOptionsIs($$rSubArray(options, 3));\n"}