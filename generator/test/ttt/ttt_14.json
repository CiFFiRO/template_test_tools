{"title": "python_3", "type":1,"rules":{"p1":["union","intersection"],"p2":["difference","symmetric_difference"],"p3":["issubset","issuperset"]},"testText":"a = {1, 2, 3, 5, 134}\nb = {-51, 42, 1, 2, 777}\nc = set()\n\nc.update(a.${p1}(b)) \nc = c.difference(a.${p2}(b)) \n\nif c.${p3}(a): \n  c.add(333)\n\nЗначение множества c после выполнения скрипта выше равно","feedbackScript":"function isSuperset(set, subset) {\n    for (var elem of subset) {\n        if (!set.has(elem)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction union(setA, setB) {\n    var _union = new Set(setA);\n    for (var elem of setB) {\n        _union.add(elem);\n    }\n    return _union;\n}\n\nfunction intersection(setA, setB) {\n    var _intersection = new Set();\n    for (var elem of setB) {\n        if (setA.has(elem)) {\n            _intersection.add(elem);\n        }\n    }\n    return _intersection;\n}\n\nfunction difference(setA, setB) {\n    var _difference = new Set(setA);\n    for (var elem of setB) {\n        _difference.delete(elem);\n    }\n    return _difference;\n}\n\nfunction symmetricDifference(setA, setB) {\n    var _difference = new Set();\n    for (let elem of setA) {\n        if (!(elem in setB)) {\n          _difference.add(elem);\n        }\n    }\n    for (let elem of setB) {\n        if (!(elem in setA)) {\n          _difference.add(elem);\n        }\n    }\n    return _difference;\n}\n\nfunction setToString(s) {\n  let result = '{';\n  for (let elem of s) {\n    result += elem.toString() + ', ';\n  }\n  result = result.substring(0, result.length - 2) + '}';\n  return result;\n}\n\n\nlet a = new Set([1, 2, 3, 5, 134]);\nlet b = new Set([-51, 42, 1, 2, 777]);\nlet c = new Set([]);\n\nif ($p1 === $p1_0) {\n  c = union(a, b);\n} else {\n  c = intersection(a, b);\n}\nif ($p2 === $p2_0) {\n  c = difference(c, difference(a, b));\n} else {\n  c = difference(c, symmetricDifference(a, b));\n}\nif ($p3 === $p3_0) {\n  if (isSuperset(a, c)) {\n    c.add(333);\n  }\n} else {\n  if (isSuperset(c, a)) {\n    c.add(333);\n  }\n}\n\nlet answer = setToString(c);\n$$AnswerIs([answer]);\n\nlet options = ['{-51, 1, 2, 42, 777}', '{1, 2, 333}', '{-51, 1, 2, 5, 333}',\n              '{1, 2}', '{-51, 1, 2, 42, 777, 333}', '{1, 2, 777}',\n              '{1, 2, 42, 333}', '{}', 'None', 'Будет ошибка веремени исполнения'];\nlet index = options.indexOf(answer);\nif (index !== -1) {\n  options.splice(index, 1);\n}\n\n$$FalseOptionsIs($$rSubArray(options, 4));\n"}